<Activity mc:Ignorable="sap sap2010" x:Class="TestNextColExcel" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="_strCellAddress" Type="InOutArgument(x:String)" />
    <x:Property Name="_intOffsetColumn" Type="InArgument(x:Int32)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1186,827</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>TestNextColExcel_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="utils_offset_columns" sap:VirtualizedContainerService.HintSize="376,256" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="str_cell" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="string numToName(int ColNumber)&#xD;&#xA;{&#xD;&#xA;    //quy luật chuyển đổi cơ số sang hệ 27 // convert number to frame of 27&#xD;&#xA;    string A = &quot;0ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;&#xD;&#xA;    string res = &quot;&quot;;&#xD;&#xA;    while(ColNumber&gt;0)&#xD;&#xA;    {&#xD;&#xA;        res = A[ColNumber % 26] + res;&#xD;&#xA;        ColNumber /= 26;&#xD;&#xA;    }&#xD;&#xA;    return res;&#xD;&#xA;}&#xD;&#xA; int ExcelColumnNameToNumber(string columnName)&#xD;&#xA;{&#xD;&#xA;    if (string.IsNullOrEmpty(columnName)) throw new ArgumentNullException(&quot;columnName&quot;);&#xD;&#xA;    columnName = columnName.ToUpperInvariant();&#xD;&#xA;    int sum = 0;&#xD;&#xA;    for (int i = 0; i &lt; columnName.Length; i++)&#xD;&#xA;    {&#xD;&#xA;        sum *= 26;&#xD;&#xA;        sum += (columnName[i] - 'A' + 1);&#xD;&#xA;    }&#xD;&#xA;    return sum;&#xD;&#xA;}&#xD;&#xA;string nextColExcel(string mycell, int numberMove){&#xD;&#xA;&#x9;string my_text = Regex.Match(mycell,&quot;[a-zA-Z]+&quot;,RegexOptions.None).ToString();&#xD;&#xA;&#x9;string my_num = Regex.Match(mycell,@&quot;\d+&quot;).ToString();&#xD;&#xA;&#x9;return numToName(ExcelColumnNameToNumber(my_text)+numberMove)+my_num;&#xD;&#xA;}&#xD;&#xA;_str_cell = nextColExcel(_str_cell,_int_number);" DisplayName="ivk_offset_columns" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="x:String" x:Key="_str_cell">[_strCellAddress]</InOutArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="_int_number">[_intOffsetColumn]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>